{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BAPS\\\\Downloads\\\\todo\\\\src\\\\components\\\\Table\\\\Table.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Table.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table() {\n  _s();\n  const navigate = useNavigate();\n  const [storedEntries, setStoredEntries] = useState(JSON.parse(localStorage.getItem(\"entries\")) || []);\n  const handleDelete = indexToDelete => {\n    const updatedEntries = storedEntries.filter((_, index) => index !== indexToDelete);\n    setStoredEntries(updatedEntries);\n    localStorage.setItem(\"entries\", JSON.stringify(updatedEntries));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/form\"),\n      className: \"back-button\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faArrowLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stored Entries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), storedEntries.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"stored-entries-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: storedEntries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(index),\n              className: \"delete-button\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"hj/DuJjosxUA9EX3JTnZTjTXgYs=\", false, function () {\n  return [useNavigate];\n});\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","useNavigate","FontAwesomeIcon","faArrowLeft","faTrash","jsxDEV","_jsxDEV","Table","_s","navigate","storedEntries","setStoredEntries","JSON","parse","localStorage","getItem","handleDelete","indexToDelete","updatedEntries","filter","_","index","setItem","stringify","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","length","map","entry","name","date","_c","$RefreshReg$"],"sources":["C:/Users/BAPS/Downloads/todo/src/components/Table/Table.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Table.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Table() {\r\n  const navigate = useNavigate();\r\n  const [storedEntries, setStoredEntries] = useState(\r\n    JSON.parse(localStorage.getItem(\"entries\")) || []\r\n  );\r\n\r\n  const handleDelete = (indexToDelete) => {\r\n    const updatedEntries = storedEntries.filter(\r\n      (_, index) => index !== indexToDelete\r\n    );\r\n    setStoredEntries(updatedEntries);\r\n    localStorage.setItem(\"entries\", JSON.stringify(updatedEntries));\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <button onClick={() => navigate(\"/form\")} className=\"back-button\">\r\n        <FontAwesomeIcon icon={faArrowLeft} />\r\n      </button>\r\n      <h2>Stored Entries</h2>\r\n      {storedEntries.length > 0 ? (\r\n        <table className=\"stored-entries-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Task</th>\r\n              <th>Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {storedEntries.map((entry, index) => (\r\n              <tr key={index}>\r\n                <td>{entry.name}</td>\r\n                <td>{entry.date}</td>\r\n                <td>\r\n                  <button\r\n                    onClick={() => handleDelete(index)}\r\n                    className=\"delete-button\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <h2>No Tasks</h2>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}